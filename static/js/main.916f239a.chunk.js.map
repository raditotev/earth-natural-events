{"version":3,"sources":["components/event.js","utils/category-icons.js","components/map.js","utils/api-client.js","utils/hooks.js","components/lib.js","components/header.js","App.js","reportWebVitals.js","index.js"],"names":["Event","description","children","css","categoryIcons","drought","dustHaze","earthquakes","floods","landslides","manmade","seaLakeIce","severeStorms","snow","tempExtremes","volcanoes","waterColor","wildfires","Map","events","renderEvent","point","event","category","lng","lat","properties","title","uuidv4","bootstrapURLKeys","key","process","defaultCenter","defaultZoom","map","index","categories","id","Array","isArray","geometry","coordinates","NASA_API","endpoint","a","fetch","then","response","json","data","ok","Promise","reject","defaultInitialState","status","error","useAsync","initialState","initialStateRef","React","s","current","safeSetState","dispatch","mounted","useSafeDispatch","setData","setError","reset","run","promise","Error","isIdle","isLoading","isError","isSuccess","FullPageSpinner","spin","keyframes","transform","FullPageErrorFallback","role","color","height","display","flexDirection","justifyContent","alignItems","message","Header","setEvents","features","useEffect","client","mq","name","aria-label","onChange","e","target","value","filter","Set","feat","getCategories","toLowerCase","split","join","App","useState","FallbackComponent","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.916f239a.chunk.js","sourcesContent":["/** @jsxRuntime classic */\n/** @jsx jsx */\nimport {css, jsx} from '@emotion/react'\n\nfunction Event({description, children}) {\n  return (\n    <div\n      css={css`\n        font-size: 30px;\n        color: crimson;\n        > div {\n          display: none;\n        }\n        &:hover {\n          > div {\n            display: block;\n            position: absolute;\n            min-width: 200px;\n            top: -70px;\n            color: #fff;\n            font-size: 18px;\n            background-color: rgba(0, 0, 0, 0.7);\n            padding: 5px;\n            border: 1px solid black;\n            border-radius: 5px;\n            z-index: 10;\n          }\n        }\n        }\n      `}\n    >\n      <div>{description}</div>\n      {children}\n    </div>\n  )\n}\n\nexport {Event}\n","import {FaThermometerHalf} from 'react-icons/fa'\nimport {GiEruption} from 'react-icons/gi'\nimport {GiTumbleweed} from 'react-icons/gi'\nimport {GiDustCloud} from 'react-icons/gi'\nimport {GiFallingRocks} from 'react-icons/gi'\nimport {GiBulldozer} from 'react-icons/gi'\nimport {GiIceberg} from 'react-icons/gi'\nimport {GiSnowflake2} from 'react-icons/gi'\nimport {ImFire} from 'react-icons/im'\nimport {RiEarthquakeFill} from 'react-icons/ri'\nimport {RiFloodFill} from 'react-icons/ri'\nimport {RiTyphoonFill} from 'react-icons/ri'\nimport {BsDropletHalf} from 'react-icons/bs'\n\nexport const categoryIcons = {\n  drought: <GiTumbleweed />,\n  dustHaze: <GiDustCloud />,\n  earthquakes: <RiEarthquakeFill />,\n  floods: <RiFloodFill />,\n  landslides: <GiFallingRocks />,\n  manmade: <GiBulldozer />,\n  seaLakeIce: <GiIceberg />,\n  severeStorms: <RiTyphoonFill />,\n  snow: <GiSnowflake2 />,\n  tempExtremes: <FaThermometerHalf />,\n  volcanoes: <GiEruption />,\n  waterColor: <BsDropletHalf />,\n  wildfires: <ImFire />,\n}\n","import {Fragment} from 'react'\nimport {v4 as uuidv4} from 'uuid'\nimport {Event} from './event'\nimport GoogleMapReact from 'google-map-react'\nimport {categoryIcons} from 'utils/category-icons'\n\nfunction Map({events}) {\n  function renderEvent(point, event, category) {\n    const [lng, lat] = point\n    return (\n      <Event\n        key={uuidv4()}\n        lat={lat}\n        lng={lng}\n        description={event.properties.title}\n        children={categoryIcons[category]}\n      />\n    )\n  }\n\n  return (\n    <Fragment>\n      <GoogleMapReact\n        bootstrapURLKeys={{key: process.env.REACT_APP_GOOGLE_API_KEY}}\n        defaultCenter={{\n          lat: 45,\n          lng: 0,\n        }}\n        defaultZoom={1}\n      >\n        {events.map((event, index) => {\n          const category = event.properties.categories[0].id\n          if (Array.isArray(event.geometry.coordinates[0])) {\n            return event.geometry.coordinates.map(point => {\n              return Array.isArray(point[0])\n                ? point.map(point => renderEvent(point, event, category))\n                : renderEvent(point, event, category)\n            })\n          } else {\n            const point = event.geometry.coordinates\n            return renderEvent(point, event, category)\n          }\n        })}\n      </GoogleMapReact>\n    </Fragment>\n  )\n}\n\nexport {Map}\n","const NASA_API = 'https://eonet.sci.gsfc.nasa.gov/api/v3'\n\nasync function client(endpoint) {\n  return fetch(`${NASA_API}/${endpoint}`).then(async response => {\n    const data = await response.json()\n    if (response.ok) {\n      return data\n    } else {\n      return Promise.reject(data)\n    }\n  })\n}\n\nexport {client}\n","import * as React from 'react'\n\nfunction useSafeDispatch(dispatch) {\n  const mounted = React.useRef(false)\n  React.useLayoutEffect(() => {\n    mounted.current = true\n    return () => (mounted.current = false)\n  }, [])\n  return React.useCallback(\n    (...args) => (mounted.current ? dispatch(...args) : void 0),\n    [dispatch],\n  )\n}\n\n// Example usage:\n// const {data, error, status, run} = useAsync()\n// React.useEffect(() => {\n//   run(fetchPokemon(pokemonName))\n// }, [pokemonName, run])\nconst defaultInitialState = {status: 'idle', data: null, error: null}\nfunction useAsync(initialState) {\n  const initialStateRef = React.useRef({\n    ...defaultInitialState,\n    ...initialState,\n  })\n  const [{status, data, error}, setState] = React.useReducer(\n    (s, a) => ({...s, ...a}),\n    initialStateRef.current,\n  )\n\n  const safeSetState = useSafeDispatch(setState)\n\n  const setData = React.useCallback(\n    data => safeSetState({data, status: 'resolved'}),\n    [safeSetState],\n  )\n  const setError = React.useCallback(\n    error => safeSetState({error, status: 'rejected'}),\n    [safeSetState],\n  )\n  const reset = React.useCallback(() => safeSetState(initialStateRef.current), [\n    safeSetState,\n  ])\n\n  const run = React.useCallback(\n    promise => {\n      if (!promise || !promise.then) {\n        throw new Error(\n          `The argument passed to useAsync().run must be a promise. Maybe a function that's passed isn't returning anything?`,\n        )\n      }\n      safeSetState({status: 'pending'})\n      return promise.then(\n        data => {\n          setData(data)\n          return data\n        },\n        error => {\n          setError(error)\n          return Promise.reject(error)\n        },\n      )\n    },\n    [safeSetState, setData, setError],\n  )\n\n  return {\n    // using the same names that react-query uses for convenience\n    isIdle: status === 'idle',\n    isLoading: status === 'pending',\n    isError: status === 'rejected',\n    isSuccess: status === 'resolved',\n\n    setData,\n    setError,\n    error,\n    status,\n    data,\n    run,\n    reset,\n  }\n}\n\nexport {useAsync}\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport {css, jsx, keyframes} from '@emotion/react'\n\nimport {FaSpinner} from 'react-icons/fa'\n\nfunction FullPageSpinner() {\n  const spin = keyframes({\n    '0%': {transform: 'rotate(0deg)'},\n    '100%': {transform: 'rotate(360deg)'},\n  })\n\n  return (\n    <div\n      css={css`\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100vw;\n        height: 100vh;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        background-color: rgba(255, 255, 255, 0.3);\n        z-index: 5;\n      `}\n    >\n      <FaSpinner\n        css={css`\n          width: 150px;\n          height: 150px;\n          animation: ${spin} 1s linear infinite;\n        `}\n      />\n      <h1\n        css={css`\n          margin-top: 15px;\n          text-align: center;\n        `}\n      >\n        Loading...\n      </h1>\n    </div>\n  )\n}\n\nfunction FullPageErrorFallback({error}) {\n  return (\n    <div\n      role=\"alert\"\n      css={{\n        color: 'red',\n        height: '100vh',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      <p>Uh oh... There's a problem. Try refreshing the app.</p>\n      <pre>{error.message}</pre>\n    </div>\n  )\n}\n\nexport {FullPageSpinner, FullPageErrorFallback}\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport {css, jsx} from '@emotion/react'\n\nimport {useEffect} from 'react'\nimport {client} from 'utils/api-client'\nimport {useAsync} from 'utils/hooks'\nimport {FullPageSpinner} from './lib'\n\nconst EVENTS_ENDPOINT = 'events/geojson'\n\nfunction getCategories(events) {\n  return [...new Set(events.map(feat => feat.properties.categories[0].title))]\n}\n\nfunction Header({setEvents}) {\n  const {\n    isLoading,\n    data: {features: events},\n    run,\n  } = useAsync({data: {features: []}})\n\n  useEffect(() => {\n    run(client(EVENTS_ENDPOINT))\n  }, [run])\n\n  function handleCategoryChange(e) {\n    const category = e.target.value\n    setEvents(\n      events.filter(event => event.properties.categories[0].title === category),\n    )\n  }\n\n  const mq = '@media (max-width: 600px)'\n\n  return (\n    <header\n      css={css`\n        position: fixed;\n        top: 0;\n        left: 0;\n        right: 0;\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        padding: 15px;\n        z-index: 10;\n        ${mq} {\n          flex-direction: column;\n          justify-content: center;\n        }\n      `}\n    >\n      <h1\n        css={css`\n          color: #fff;\n          -webkit-text-stroke-width: 1px;\n          -webkit-text-stroke-color: black;\n          font-size: 40px;\n          font-weight: 900;\n          margin: 15px;\n          ${mq} {\n            font-size: 25px;\n          }\n        `}\n      >\n        Earth Natural Events\n        <span\n          css={css`\n            position: relative;\n            left: -130px;\n            top: 10px;\n            color: darkblue;\n            font-size: 23px;\n            font-weight: 700;\n            ${mq} {\n              display: block;\n              position: static;\n              font-size: 15px;\n              font-weight: 500;\n            }\n          `}\n        >\n          Powered by{' '}\n          <strong\n            css={css`\n              color: red;\n              font-weight: 900;\n            `}\n          >\n            NASA\n          </strong>\n        </span>\n      </h1>\n      {isLoading ? (\n        <FullPageSpinner />\n      ) : (\n        <select\n          name=\"categories\"\n          aria-label=\"Select natural event\"\n          onChange={handleCategoryChange}\n          css={css`\n            border-radius: 5px;\n            background-color: #fff;\n            padding: 10px;\n            &:focus {\n              outline: none;\n            }\n            ${mq} {\n              margin-top: 10px;\n            }\n          `}\n        >\n          <option value=\"\">Select event type</option>\n          {getCategories(events).map(category => {\n            return (\n              <option\n                key={category.toLowerCase().split(' ').join('-')}\n                value={category}\n              >\n                {category}\n              </option>\n            )\n          })}\n        </select>\n      )}\n    </header>\n  )\n}\n\nexport {Header}\n","import {useState} from 'react'\nimport {ErrorBoundary} from 'react-error-boundary'\nimport {Map} from 'components/map'\nimport {Header} from 'components/header'\nimport {FullPageErrorFallback} from 'components/lib'\n\nfunction App() {\n  const [events, setEvents] = useState([])\n\n  return (\n    <ErrorBoundary FallbackComponent={FullPageErrorFallback}>\n      <Header setEvents={setEvents} />\n      <Map events={events} />\n    </ErrorBoundary>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}